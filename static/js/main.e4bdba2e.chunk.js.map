{"version":3,"sources":["components/PlayerCardSmall.js","components/TeamScoreCards.js","views/ScoresDashboard.js","components/SeasonHeader.js","App.js","serviceWorker.js","index.js"],"names":["outPlayerPhotoStyle","opacity","filter","userSelect","PlayerCardSmall","props","player","id","profile","firstName","lastName","age","occupation","currentResidence","currentTribe","hometown","hasFire","hiddenIdols","points","className","style","borderColor","colors","light","undefined","src","alt","repeat","dark","name","rankingStrings","TeamScoreCards","owner","members","totalPoints","standing","sort","a","b","role","aria-label","normalizePlayers","players","cast","tribes","map","playerId","find","p","tribe","ScoresDashboard","season","ourGame","teamsRanked","teams","theBenchTeam","team","index","key","SeasonHeader","number","displayDate","seasonData","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e4bdba2e.chunk.js","sourcesContent":["import React from 'react';\n\nconst outPlayerPhotoStyle = {\n  opacity: 0.70,\n  filter: 'saturate(8%) contrast(65%) brightness(115%)',\n  userSelect: 'none'\n};\n\nfunction PlayerCardSmall(props) {\n  const {\n    id,\n    profile: { firstName, lastName, age, occupation, currentResidence, hometown },\n    currentTribe,\n    hasFire,\n    hiddenIdols,\n    points,\n  } = props.player;\n\n  return (\n    <div className=\"w-1/2 px-2 relative\">\n      <div\n        className=\"rounded-lg overflow-hidden shadow-md bg-white border-2 border-gray-400\"\n        style={hasFire ? { borderColor: currentTribe.colors.light } : undefined}\n      >\n        {/* Photo */}\n        <img\n          className=\"object-cover object-top h-40 w-full\"\n          src={`images/cast/${firstName}-${lastName}.jpg`}\n          alt={`${firstName} ${lastName}`}\n          style={!hasFire ? outPlayerPhotoStyle : undefined}\n        />\n\n        {/* Status Indicator */}\n        <div className={`absolute top-0 right-0 w-${hasFire ? '8' : '16'} h-8 flex justify-center items-center content-center -mt-3 -mr-1 rounded-full bg-${hasFire ? 'orange-200' : 'white'} shadow`} >\n          {hasFire && (\n            <span className=\"text-lg font-bold text-center tracking-tighter\">\n              {'ðŸ”¥'}\n            </span>\n          )}\n          {!hasFire && (\n            <span className=\"text-md font-medium text-gray-900 text-center tracking-tighter\">\n              {points} pts\n            </span>\n          )}\n        </div>\n\n        {/* Player Details */}\n        <div className={`p-2 pb-3 ${hasFire ? 'bg-white' : 'bg-gray-100'}`}>\n          <div className=\"flex justify-between content-center items-center\">\n            <p className=\"text-lg font-bold\">{firstName} {'ðŸ—¿'.repeat(hiddenIdols)}</p>\n            <p className=\"text-lg font-bold leading-none\">\n              <span className=\"rounded text-xs px-2 font-medium\" style={{\n                'background': currentTribe.colors.light,\n                'color': currentTribe.colors.dark\n              }}>\n                {currentTribe.name}\n              </span>\n            </p>\n          </div>\n          <p className=\"text-xs font-medium text-gray-700 mt-2 hidden\">\n            <span className=\"font-bold\">Age</span> <span>{age}</span><br />\n            <span>{occupation}</span><br />\n            <span>{currentResidence}</span><br />\n          </p>\n        </div>\n      </div>\n    </div >\n  );\n}\n\nexport default PlayerCardSmall;","import React from 'react';\nimport PlayerCardSmall from '../components/PlayerCardSmall';\n\nconst rankingStrings = ['', '1st', '2nd', '3rd', '4th', '5th', '6th', '7th', '8th'];\n\nexport default function TeamScoreCards(props) {\n  const { owner, members, totalPoints, standing } = props;\n\n  const sortedMembers = members.sort((a, b) => {\n    // Sort members in the game first\n    if (a.hasFire && b.hasFire) return 0;\n    if (!a.hasFire && b.hasFire) return 1;\n    if (a.hasFire && !b.hasFire) return -1;\n\n    // Both members are out of the game\n    return (a.points > b.points) ? -1 : 1;\n  });\n  return (\n    <section className=\"pb-8 mb-12 shadow-lg bg-gray-100\">\n      {/* Team Title */}\n      <div className=\"flex justify-between items-center mb-6 px-8 py-4 bg-white shadow\">\n        <h2 className=\"text-3xl font-black leading-tight text-blue-900\">\n          {standing === 1 ? (\n            <span role=\"img\" aria-label=\"1st place\" className=\"block text-base font-bold text-blue-600\">\n              ðŸ‘‘ 1st\n              </span>\n          ) : (\n              <span role=\"img\" aria-label={rankingStrings[standing]} className=\"block text-base font-bold text-blue-600\">\n                {rankingStrings[standing]}\n              </span>\n            )}\n          {owner}\n        </h2>\n        <span className=\"inline-block rounded-full px-4 py-1 mr-2 bg-yellow-200 text-xl font-semibold text-orange-600 shadow\">\n          {totalPoints} pts\n          </span>\n      </div>\n\n      {/* Team Players */}\n      <section className=\"px-4\">\n        <div className=\"flex -mx-2 mb-6\">\n          <PlayerCardSmall player={members[0]} />\n          <PlayerCardSmall player={members[1]} />\n        </div>\n        <div className=\"flex -mx-2\">\n          <PlayerCardSmall player={members[2]} />\n          <PlayerCardSmall player={members[3]} />\n        </div>\n      </section>\n    </section>\n  );\n}\n","import React from 'react';\n\nimport TeamScoreCards from '../components/TeamScoreCards';\n\n// Utils\nfunction normalizePlayers(players, cast, tribes) {\n  return players.map(playerId => {\n    const player = cast.find(p => p.id === playerId);\n\n    return {\n      ...player,\n      currentTribe: tribes.find(tribe => tribe.id === player.currentTribe)\n    };\n  });\n}\n\n// -----------------------------------------------------------------\n\nfunction ScoresDashboard(props) {\n  const { season, cast, tribes, ourGame } = props;\n\n  const teamsRanked = [...ourGame.teams].sort((a, b) => b.totalPoints - a.totalPoints);\n  const theBenchTeam = teamsRanked.find(team => team.id === \"bench\");\n  const teams = [...teamsRanked.filter((team => team.id !== \"bench\")), theBenchTeam];\n\n  return (\n    <div className=\"container mx-auto pt-8 pb-4\">\n      {teams.map((team, index) => {\n        const members = normalizePlayers(team.members, cast, tribes);\n\n        return (\n          <TeamScoreCards\n            key={team.id}\n            totalPoints={team.totalPoints}\n            owner={team.owner}\n            members={members}\n            standing={team.id === 'bench' ? 0 : index + 1}\n          />\n        );\n      })}\n    </div >\n  );\n}\n\nexport default ScoresDashboard;\n","import React from 'react';\n\nfunction SeasonHeader({ season }) {\n  return (\n    <section className=\"flex justify-start p-4 py-6 mb-6 bg-blue-800 shadow-lg\">\n      <div>\n        <img src=\"images/season-logo.png\" className=\"w-20\" />\n      </div>\n\n      {/* Season info */}\n      <div className=\"flex items-center px-4\">\n        <p className=\"text-sm leading-tight font-bold text-blue-200\">\n          {`Season ${season.number}`}&ensp;&bull;&ensp;{`${season.displayDate}`}\n          <br />\n          <span className=\"text-xl font-extrabold text-blue-100\">\n            {season.name}\n          </span>\n        </p>\n      </div>\n    </section>\n  );\n}\n\nexport default SeasonHeader","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport './global.css';\nimport './index.css';\n\nimport seasonData from './season-39.json';\n\nimport ScoresDashboard from './views/ScoresDashboard';\nimport SeasonHeroHeader from './components/SeasonHeroHeader';\nimport SeasonHeader from './components/SeasonHeader';\n\nconst {\n  season,\n  tribes,\n  cast,\n  ourGame,\n} = seasonData;\n\nfunction App() {\n  return (\n    <Router>\n      {/* <SeasonHeroHeader season={season} /> */}\n      <SeasonHeader season={season} />\n\n      {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n      <Switch>\n        <Route path=\"/about\">\n          <h2>About</h2>\n        </Route>\n        <Route path=\"/users\">\n          <h2>Users</h2>\n        </Route>\n        <Route path=\"/\">\n          <ScoresDashboard\n            season={season}\n            tribes={tribes}\n            cast={cast}\n            ourGame={ourGame}\n          />\n        </Route>\n      </Switch>\n    </Router >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
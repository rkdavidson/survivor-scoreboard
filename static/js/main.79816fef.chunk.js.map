{"version":3,"sources":["components/PlayerFireStatus.js","components/TribeName.js","components/PlayerCardSmall.js","components/TeamScoreCards.js","views/ScoresDashboard.js","views/PlayerBio.js","components/SeasonHeroHeader.js","components/SeasonHeader.js","SeasonData.js","App.js","serviceWorker.js","index.js"],"names":["PlayerFireStatus","className","hasFire","points","join","TribeNameSmall","tribe","name","colors","style","background","light","color","dark","toUpperCase","TribeName","outPlayerPhotoStyle","opacity","filter","userSelect","PlayerCardSmall","props","player","id","profile","firstName","lastName","age","occupation","currentResidence","currentTribe","hometown","hiddenIdols","history","useHistory","undefined","onClick","push","borderColor","src","process","alt","repeat","rankingStrings","TeamScoreCards","owner","members","totalPoints","standing","role","aria-label","ScoresDashboard","season","cast","tribes","ourGame","teams","map","team","index","key","PlayerProfile","quickStats","Object","entries","label","value","PlayerBio","playerId","useParams","find","p","SeasonHeroHeader3","to","backgroundColor","number","displayDate","SeasonHeader","seasonData","normalizePlayers","players","teamsRanked","sort","a","b","theBenchTeam","SeasonData","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iRAwBeA,MAtBf,YAAkE,IAAtCC,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,QAA0B,IAAjBC,cAAiB,MAAR,KAAQ,EAE/D,OACE,yBAAKF,UAAW,CAAC,kFAEfC,EAAU,YAAc,YACxBD,GACAG,KAAK,MACJF,GACC,0BAAMD,UAAU,kDACb,iBAGHC,GACA,0BAAMD,UAAU,iDACF,OAAXE,EAAA,UAAqBA,EAArB,QAAoC,kBCfxC,SAASE,EAAT,GAAoC,IAAVC,EAAS,EAATA,MACvBC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,OAEd,OACE,uBAAGP,UAAU,kCACX,0BAAMA,UAAU,+CAA+CQ,MAAO,CACpEC,WAAYF,EAAOG,MACnBC,MAAOJ,EAAOK,OAEbN,EAAKO,gBAMP,SAASC,EAAT,GAA0C,IAArBd,EAAoB,EAApBA,UAAWK,EAAS,EAATA,MAC7BC,EAAiBD,EAAjBC,KAAMC,EAAWF,EAAXE,OAEd,OACE,0BAAMP,UAAS,0EAAqEA,GAAaQ,MAAO,CACtGC,WAAYF,EAAOG,MACnBC,MAAOJ,EAAOK,OAEbN,EAAKO,eCnBZ,IAAME,EAAsB,CAC1BC,QAAS,GACTC,OAAQ,iDACRC,WAAY,QAyDCC,MAtDf,SAAyBC,GAAQ,IAAD,EAQ1BA,EAAMC,OANRC,EAF4B,EAE5BA,GAF4B,IAG5BC,QAAWC,EAHiB,EAGjBA,UAAWC,EAHM,EAGNA,SAAUC,EAHJ,EAGIA,IAAKC,EAHT,EAGSA,WAAYC,EAHrB,EAGqBA,iBACjDC,GAJ4B,EAGuCC,SAHvC,EAI5BD,cACA5B,EAL4B,EAK5BA,QACA8B,EAN4B,EAM5BA,YACA7B,EAP4B,EAO5BA,OAEE8B,EAAUC,cAMd,OACE,yBAAKjC,UAAS,mCAA8BC,OAAUiC,EAAY,cAAgBC,QALpF,WACEH,EAAQI,KAAR,kBAAwBd,MAKtB,yBACEtB,UAAU,yEACVQ,MAAOP,EAAU,CAAEoC,YAAaR,EAAatB,OAAOG,YAAUwB,GAG9D,yBACElC,UAAU,sCACVsC,IAAG,UAAKC,mDAAL,wBAA2Cf,EAA3C,YAAwDC,EAAxD,QACHe,IAAG,UAAKhB,EAAL,YAAkBC,GACrBjB,MAAQP,OAAgCiC,EAAtBnB,IAGpB,kBAAC,EAAD,CACEf,UAAW,yBACXC,QAASA,EACTC,OAAQA,IAIV,yBAAKF,UAAS,mBAAcC,EAAU,WAAa,gBACjD,yBAAKD,UAAU,oDACb,uBAAGA,UAAS,yBACTwB,EADH,IACe,eAAKiB,OAAOV,IAE3B,kBAAC3B,EAAD,CAAgBC,MAAOwB,KAEzB,uBAAG7B,UAAU,iDACX,0BAAMA,UAAU,aAAhB,OADF,IACyC,8BAAO0B,GAAW,6BACzD,8BAAOC,GAAkB,6BACzB,8BAAOC,GAAwB,kCCvDrCc,EAAiB,CAAC,GAAI,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAE9D,SAASC,EAAevB,GAAQ,IACrCwB,EAA0CxB,EAA1CwB,MAAOC,EAAmCzB,EAAnCyB,QAASC,EAA0B1B,EAA1B0B,YAAaC,EAAa3B,EAAb2B,SAErC,OACE,6BAAS/C,UAAU,oCAEjB,yBAAKA,UAAU,oEACb,wBAAIA,UAAU,mDACE,IAAb+C,EACC,0BAAMC,KAAK,MAAMC,aAAW,YAAYjD,UAAU,2CAAlD,oBAIE,0BAAMgD,KAAK,MAAMC,aAAYP,EAAeK,GAAW/C,UAAU,2CAC9D0C,EAAeK,IAGrBH,GAEH,0BAAM5C,UAAU,uGACb8C,EADH,SAMF,6BAAS9C,UAAU,QACjB,yBAAKA,UAAU,wBACb,kBAAC,EAAD,CAAiBqB,OAAQwB,EAAQ,KACjC,kBAAC,EAAD,CAAiBxB,OAAQwB,EAAQ,KACjC,kBAAC,EAAD,CAAiBxB,OAAQwB,EAAQ,KACjC,kBAAC,EAAD,CAAiBxB,OAAQwB,EAAQ,QCT5BK,MApBf,SAAyB9B,GACmBA,EAAlC+B,OAAkC/B,EAA1BgC,KAA0BhC,EAApBiC,OADS,IACDC,EAAYlC,EAAZkC,QAE9B,OACE,6BAAStD,UAAU,0BAChBsD,EAAQC,MAAMC,KAAI,SAACC,EAAMC,GACxB,OACE,kBAACf,EAAD,CACEgB,IAAKF,EAAKnC,GACVwB,YAAaW,EAAKX,YAClBF,MAAOa,EAAKb,MACZC,QAASY,EAAKZ,QACdE,SAAsB,UAAZU,EAAKnC,GAAiB,EAAIoC,EAAQ,S,QCZxD,SAASE,EAAT,GAAoC,IAAXvC,EAAU,EAAVA,OAAU,GAQ7BA,EANFC,GAMED,EALFE,SAAWC,EAHoB,EAGpBA,UAAWC,EAHS,EAGTA,SAAUC,EAHD,EAGCA,IAAKC,EAHN,EAGMA,WAAYC,EAHlB,EAGkBA,iBAAkBE,EAHpC,EAGoCA,SACnED,EAIER,EAJFQ,aACA5B,EAGEoB,EAHFpB,QAEAC,EACEmB,EADFnB,OAKI2D,EAAa,CACjB,IAAOnC,EACP,WAAcC,EACd,SAAYG,EACZ,oBAAqBF,GAGvB,OACE,yBAAK5B,UAAU,QACb,wBAAIA,UAAU,sDAAd,UACMqB,EAAOE,QAAQC,UADrB,YACkCH,EAAOE,QAAQE,WAGjD,yBAAKzB,UAAU,4DACb,yBACEA,UAAU,2DACVsC,IAAG,UAAKC,mDAAL,wBAA2Cf,EAA3C,YAAwDC,EAAxD,QACHe,IAAG,UAAKhB,EAAL,YAAkBC,GACrBjB,MAAO,CACL6B,YAAaR,EAAatB,OAAOG,SAIrC,kBAAC,EAAD,CACEV,UAAW,yBACXC,QAASA,EACTC,OAAQA,IAGV,kBAACY,EAAD,CAAWd,UAAU,gBAAgBK,MAAOwB,KAG9C,yBAAK7B,UAAU,0CACZ8D,OAAOC,QAAQF,GAAYL,KAAI,mCAAEQ,EAAF,KAASC,EAAT,YAC9B,yBAAKN,IAAKK,EAAOhE,UAAU,sEACzB,0BAAMA,UAAU,2CAA2CgE,GAC3D,0BAAMhE,UAAU,SAASiE,SAmBtBC,MAXf,YAA8B,IAATd,EAAQ,EAARA,KACXe,EAAaC,cAAbD,SACF9C,EAAS+B,EAAKiB,MAAK,SAAAC,GAAC,OAAIA,EAAEhD,KAAO6C,KAEvC,OACE,6BAASnE,UAAU,cACjB,kBAAC4D,EAAD,CAAevC,OAAQA,MCxBdkD,MArBf,YAAwC,IAAXpB,EAAU,EAAVA,OAC3B,OACE,6BAASnD,UAAU,8BACjB,kBAAC,IAAD,CAAMwE,GAAG,KACP,yBAAKlC,IAAG,UAAKC,mDAAL,0BAAqDC,IAAI,SAInE,yBAAKxC,UAAU,6BAA6BQ,MAAO,CAAEiE,gBAAiB,oBACpE,uBAAGzE,UAAU,6DAAb,iBACamD,EAAOuB,QADpB,+BACmDvB,EAAOwB,aACxD,6BACA,0BAAM3E,UAAU,wCACbmD,EAAO7C,U,MCbLsE,I,olBChBmBvB,EAL1BF,EAA4B0B,EAA5B1B,OAAQE,EAAoBwB,EAApBxB,OAAQC,EAAYuB,EAAZvB,QAClBF,EAASyB,EAATzB,KAWN,SAAS0B,EAAiBC,EAAS3B,EAAMC,GACvC,OAAO0B,EAAQvB,KAAI,SAAAW,GAAQ,OAAIf,EAAKiB,MAAK,SAAAC,GAAC,OAAIA,EAAEhD,KAAO6C,QAOzDf,EAAI,aAf8BC,EAeDA,EAAND,EAdVI,KAAI,SAAAnC,GAAM,YACpBA,EADoB,CAEvBQ,aAAcwB,EAAOgB,MAAK,SAAAhE,GAAK,OAAIA,EAAMiB,KAAOD,EAAOQ,uBAe3D,IAAMmD,EAAc,YAAI1B,EAAQC,OAAO0B,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAErC,YAAcoC,EAAEpC,eAClEsC,EAAeJ,EAAYX,MAAK,SAAAZ,GAAI,MAAgB,UAAZA,EAAKnC,MACnDgC,EAAQC,MAAR,sBAAoByB,EAAY/D,QAAQ,SAAAwC,GAAI,MAAgB,UAAZA,EAAKnC,OAArD,CAAuE8D,IACvE9B,EAAQC,MAAQD,EAAQC,MAAMC,KAAI,SAAAC,GAAI,YACjCA,EADiC,CAEpCZ,QAASiC,EAAiBrB,EAAKZ,QAASO,GAAc6B,MAAK,SAACC,EAAGC,GAE7D,OAAID,EAAEjF,SAAWkF,EAAElF,QAAgB,GAC9BiF,EAAEjF,SAAWkF,EAAElF,QAAgB,EAChCiF,EAAEjF,UAAYkF,EAAElF,SAAiB,EAG7BiF,EAAEhF,OAASiF,EAAEjF,QAAW,EAAI,UAKzB,OACbiD,SACAC,OACAC,SACAC,WCzBMH,EAAkCkC,EAAlClC,OAAQC,EAA0BiC,EAA1BjC,KAAMC,EAAoBgC,EAApBhC,OAAQC,EAAY+B,EAAZ/B,QA2BfgC,MAzBf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAkBnC,OAAQA,IAK1B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoC,OAAK,EAACC,KAAI,UAAKjD,mDAAL,MACf,kBAAC,EAAD,CACEY,OAAQA,EACRE,OAAQA,EACRD,KAAMA,EACNE,QAASA,KAGb,kBAAC,IAAD,CAAOkC,KAAI,UAAKjD,mDAAL,sBACT,kBAAC,EAAD,CAAWa,KAAMA,QC7BPqC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.79816fef.chunk.js","sourcesContent":["import React from 'react';\n\nfunction PlayerFireStatus({ className, hasFire, points = null }) {\n\n  return (\n    <div className={[\n      `h-8 flex justify-center items-center content-center -mt-3 rounded-full bg-white`,\n      hasFire ? 'w-8 -mr-1' : 'px-4 mr-1',\n      className\n    ].join(' ')} >\n      {hasFire && (\n        <span className=\"text-lg font-bold text-center tracking-tighter\">\n          {'ðŸ”¥'}\n        </span>\n      )}\n      {!hasFire && (\n        <span className=\"text-sm font-medium text-gray-900 text-center\">\n          {points !== null ? `${points} pts` : 'ðŸ’¨'}\n        </span>\n      )}\n    </div>\n  )\n}\n\nexport default PlayerFireStatus;","import React from 'react';\n\nexport function TribeNameSmall({ tribe }) {\n  const { name, colors } = tribe;\n\n  return (\n    <p className=\"text-lg font-bold leading-none\">\n      <span className=\"rounded text-xs px-2 font-bold tracking-wide\" style={{\n        background: colors.light,\n        color: colors.dark\n      }}>\n        {name.toUpperCase()}\n      </span>\n    </p>\n  );\n}\n\nexport function TribeName({ className, tribe }) {\n  const { name, colors } = tribe;\n\n  return (\n    <span className={`rounded px-4 py-1 mt-3 text-md font-bold tracking-widest shadow ${className}`} style={{\n      background: colors.light,\n      color: colors.dark,\n    }}>\n      {name.toUpperCase()}\n    </span>\n  );\n}\n\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport PlayerFireStatus from './PlayerFireStatus';\nimport { TribeNameSmall } from './TribeName';\n\nconst outPlayerPhotoStyle = {\n  opacity: 0.8,\n  filter: 'grayscale(100%) contrast(65%) brightness(115%)',\n  userSelect: 'none'\n};\n\nfunction PlayerCardSmall(props) {\n  const {\n    id,\n    profile: { firstName, lastName, age, occupation, currentResidence, hometown },\n    currentTribe,\n    hasFire,\n    hiddenIdols,\n    points\n  } = props.player;\n  let history = useHistory();\n\n  function handleClick() {\n    history.push(`/player/${id}`);\n  }\n\n  return (\n    <div className={`w-1/2 px-2 mb-6 relative ${hasFire ? undefined : 'opacity-75'}`} onClick={handleClick}>\n      <div\n        className=\"rounded-lg overflow-hidden shadow-md bg-white border-2 border-gray-400\"\n        style={hasFire ? { borderColor: currentTribe.colors.light } : undefined}\n      >\n        {/* Photo */}\n        <img\n          className=\"object-cover object-top h-40 w-full\"\n          src={`${process.env.PUBLIC_URL}/images/cast/${firstName}-${lastName}.jpg`}\n          alt={`${firstName} ${lastName}`}\n          style={!hasFire ? outPlayerPhotoStyle : undefined}\n        />\n\n        <PlayerFireStatus\n          className={'absolute top-0 right-0'}\n          hasFire={hasFire}\n          points={points}\n        />\n\n        {/* Player Details */}\n        <div className={`p-2 pb-3 ${hasFire ? 'bg-white' : 'bg-gray-100'}`}>\n          <div className=\"flex justify-between content-center items-center\">\n            <p className={`text-lg font-semibold`}>\n              {firstName} {'ðŸ—¿'.repeat(hiddenIdols)}\n            </p>\n            <TribeNameSmall tribe={currentTribe} />\n          </div>\n          <p className=\"text-xs font-medium text-gray-700 mt-2 hidden\">\n            <span className=\"font-bold\">Age</span> <span>{age}</span><br />\n            <span>{occupation}</span><br />\n            <span>{currentResidence}</span><br />\n          </p>\n        </div>\n      </div>\n    </div >\n  );\n}\n\nexport default PlayerCardSmall;","import React from 'react';\nimport PlayerCardSmall from '../components/PlayerCardSmall';\n\nconst rankingStrings = ['', '1st', '2nd', '3rd', '4th', '5th', '6th', '7th', '8th'];\n\nexport default function TeamScoreCards(props) {\n  const { owner, members, totalPoints, standing } = props;\n\n  return (\n    <section className=\"pb-2 mb-12 shadow-lg bg-gray-100\">\n      {/* Team Title */}\n      <div className=\"flex justify-between items-center mb-6 px-8 py-4 bg-white shadow\">\n        <h2 className=\"text-3xl font-black leading-tight text-blue-900\">\n          {standing === 1 ? (\n            <span role=\"img\" aria-label=\"1st place\" className=\"block text-base font-bold text-blue-600\">\n              ðŸ‘‘ 1st\n            </span>\n          ) : (\n              <span role=\"img\" aria-label={rankingStrings[standing]} className=\"block text-base font-bold text-blue-600\">\n                {rankingStrings[standing]}\n              </span>\n            )}\n          {owner}\n        </h2>\n        <span className=\"inline-block rounded-full px-4 py-1 mr-2 bg-yellow-200 text-xl font-semibold text-orange-600 shadow\">\n          {totalPoints} pts\n          </span>\n      </div>\n\n      {/* Team Players */}\n      <section className=\"px-4\">\n        <div className=\"flex flex-wrap -mx-2\">\n          <PlayerCardSmall player={members[0]} />\n          <PlayerCardSmall player={members[1]} />\n          <PlayerCardSmall player={members[2]} />\n          <PlayerCardSmall player={members[3]} />\n        </div>\n      </section>\n    </section>\n  );\n}\n","import React from 'react';\n\nimport TeamScoreCards from '../components/TeamScoreCards';\n\n// -----------------------------------------------------------------\n\nfunction ScoresDashboard(props) {\n  const { season, cast, tribes, ourGame } = props;\n\n  return (\n    <section className=\"container mx-auto pb-4\">\n      {ourGame.teams.map((team, index) => {\n        return (\n          <TeamScoreCards\n            key={team.id}\n            totalPoints={team.totalPoints}\n            owner={team.owner}\n            members={team.members}\n            standing={team.id === 'bench' ? 0 : index + 1}\n          />\n        );\n      })}\n    </section>\n  );\n}\n\nexport default ScoresDashboard;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport PlayerFireStatus from '../components/PlayerFireStatus';\nimport { TribeName } from '../components/TribeName';\n\nfunction PlayerProfile({ player }) {\n  const {\n    id,\n    profile: { firstName, lastName, age, occupation, currentResidence, hometown },\n    currentTribe,\n    hasFire,\n    // hiddenIdols,\n    points,\n  } = player;\n\n  const hiddenIdols = 2;\n\n  const quickStats = {\n    'Age': age,\n    'Occupation': occupation,\n    'Hometown': hometown,\n    'Current Residence': currentResidence,\n  };\n\n  return (\n    <div className=\"px-6\">\n      <h1 className=\"mb-4 text-2xl text-center font-black text-gray-800\">\n        {`${player.profile.firstName} ${player.profile.lastName}`}\n      </h1>\n\n      <div className=\"flex relative justify-center items-end m-auto w-3/4 mb-6\">\n        <img\n          className=\"object-cover rounded-lg object-center shadow-lg border-4\"\n          src={`${process.env.PUBLIC_URL}/images/cast/${firstName}-${lastName}.jpg`}\n          alt={`${firstName} ${lastName}`}\n          style={{\n            borderColor: currentTribe.colors.light\n          }}\n        />\n\n        <PlayerFireStatus\n          className={'absolute top-0 right-0'}\n          hasFire={hasFire}\n          points={points}\n        />\n\n        <TribeName className=\"absolute mt-3\" tribe={currentTribe} />\n      </div>\n\n      <div className=\"mt-2 break-words text-md text-gray-800\">\n        {Object.entries(quickStats).map(([label, value]) => (\n          <div key={label} className=\"flex justify-between content-center items-start mb-2 leading-tight\">\n            <span className=\"w-1/3 text-sm text-right pr-4 font-bold\">{label}</span>\n            <span className=\"w-2/3\">{value}</span>\n          </div>\n        ))}\n      </div>\n    </div >\n  );\n}\n\nfunction PlayerBio({ cast }) {\n  const { playerId } = useParams();\n  const player = cast.find(p => p.id === playerId);\n\n  return (\n    <section className=\"mt-8 pb-12\">\n      <PlayerProfile player={player} />\n    </section>\n  );\n}\n\nexport default PlayerBio;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction SeasonHeroHeader({ season }) {\n  return (\n    <section>\n      <Link to=\"/\">\n        <img src=\"/images/masthead-2.jpg\" />\n      </Link>\n\n      {/* Season info */}\n      <div className=\"mb-2 px-8 pt-4 pb-6\" style={{ backgroundColor: 'rgb(21, 20, 28)' }}>\n        <p className=\"text-md text-center leading-tight font-bold text-blue-200\">\n          {`Season ${season.number}`}&ensp;&bull;&ensp;{`${season.displayDate}`}\n          <br />\n          <span className=\"text-2xl font-extrabold text-blue-100\">\n            {season.name}\n          </span>\n        </p>\n      </div>\n    </section>\n  );\n}\nfunction SeasonHeroHeader3({ season }) {\n  return (\n    <section className=\"border-b-2 border-blue-400\">\n      <Link to=\"/\">\n        <img src={`${process.env.PUBLIC_URL}/images/masthead-3.jpg`} alt=\"S39\" />\n      </Link>\n\n      {/* Season info */}\n      <div className=\"mb-2 px-8 pt-4 pb-6 hidden\" style={{ backgroundColor: 'rgb(21, 20, 28)' }}>\n        <p className=\"text-sm text-center leading-tight font-bold text-blue-200\">\n          {`Season ${season.number}`}&ensp;&bull;&ensp;{`${season.displayDate}`}\n          <br />\n          <span className=\"text-xl font-extrabold text-blue-100\">\n            {season.name}\n          </span>\n        </p>\n      </div>\n    </section>\n  );\n}\n\nexport default SeasonHeroHeader3","import React from 'react';\n\nfunction SeasonHeader({ season }) {\n  return (\n    <section className=\"flex justify-start p-4 py-6 mb-6 bg-blue-800 shadow-lg\">\n      <div>\n        <img src=\"/images/season-logo.png\" className=\"w-20\" />\n      </div>\n\n      {/* Season info */}\n      <div className=\"flex items-center px-4\">\n        <p className=\"text-sm leading-tight font-bold text-blue-200\">\n          {`Season ${season.number}`}&ensp;&bull;&ensp;{`${season.displayDate}`}\n          <br />\n          <span className=\"text-xl font-extrabold text-blue-100\">\n            {season.name}\n          </span>\n        </p>\n      </div>\n    </section>\n  );\n}\n\nexport default SeasonHeader","import seasonData from './season-39.json';\n\nconst { season, tribes, ourGame } = seasonData;\nlet { cast } = seasonData;\n\n// Utils\n// -----------------------------------------------------------------\nfunction normalizeTribes(players, tribes) {\n  return players.map(player => ({\n    ...player,\n    currentTribe: tribes.find(tribe => tribe.id === player.currentTribe)\n  }));\n}\n\nfunction normalizePlayers(players, cast, tribes) {\n  return players.map(playerId => cast.find(p => p.id === playerId));\n}\n\n// Process Data\n// -----------------------------------------------------------------\n\n// Replace references to tribeIds with tribe data\ncast = [...normalizeTribes(cast, tribes)];\n\n// Rank teams by current points, and sort Bench team to end\nconst teamsRanked = [...ourGame.teams].sort((a, b) => b.totalPoints - a.totalPoints);\nconst theBenchTeam = teamsRanked.find(team => team.id === \"bench\");\nourGame.teams = [...teamsRanked.filter((team => team.id !== \"bench\")), theBenchTeam];\nourGame.teams = ourGame.teams.map(team => ({\n  ...team,\n  members: normalizePlayers(team.members, cast, tribes).sort((a, b) => {\n    // Sort members in the game first\n    if (a.hasFire && b.hasFire) return 0;\n    if (!a.hasFire && b.hasFire) return 1;\n    if (a.hasFire && !b.hasFire) return -1;\n\n    // Both members are out of the game\n    return (a.points > b.points) ? -1 : 1;\n  })\n}));\n\n// Return processed data\nexport default {\n  season,\n  cast,\n  tribes,\n  ourGame,\n}","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n// Views\nimport ScoresDashboard from './views/ScoresDashboard';\nimport PlayerBio from './views/PlayerBio';\n\n// Components\nimport SeasonHeroHeader from './components/SeasonHeroHeader';\nimport SeasonHeader from './components/SeasonHeader';\n\n// Local\nimport './global.css';\nimport './index.css';\n\n// Season Data\nimport SeasonData from './SeasonData';\nconst { season, cast, tribes, ourGame } = SeasonData;\n\nfunction App() {\n  return (\n    <Router>\n      <SeasonHeroHeader season={season} />\n      {/* <SeasonHeader season={season} /> */}\n\n      {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n      <Switch>\n        <Route exact path={`${process.env.PUBLIC_URL}/`}>\n          <ScoresDashboard\n            season={season}\n            tribes={tribes}\n            cast={cast}\n            ourGame={ourGame}\n          />\n        </Route>\n        <Route path={`${process.env.PUBLIC_URL}/player/:playerId`}>\n          <PlayerBio cast={cast} />\n        </Route>\n      </Switch>\n    </Router >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}